cmake_minimum_required(VERSION 3.8...3.18)
if(${CMAKE_VERSION} VERSION_LESS 3.12)
  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
endif()
project(PSIMACE)

# (1)
option(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  find_package(Geant4 REQUIRED ui_all vis_all)
else()
  find_package(Geant4 REQUIRED)
endif()
find_package(MPI REQUIRED)
find_package(G4mpi REQUIRED)
find_package(ROOT QUIET)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include
			      ${Geant4_INCLUDE_DIR}
			      ${G4mpi_INCLUDE_DIR})
if(NOT ROOT_FOUND)
  message(STATUS "ROOT package not found")
  return()
else()
  include_directories(${ROOT_INCLUDE_DIR})
endif()

# (2)
set(CMAKE_CXX_COMPILER mpicxx)

# (4)
file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cpp)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh)

# Find ROOT (required package)
#

# (5)
add_executable(PSIMACE PSIMACE.cpp ${sources} ${headers})
target_link_libraries(PSIMACE ${Geant4_LIBRARIES} ${G4mpi_LIBRARIES})
if(ROOT_FOUND)
  target_link_libraries(PSIMACE ${ROOT_LIBRARIES} )
endif()

# (6)
set(PSIMACE_SCRIPTS
  init_vis.mac
  run.mac
  vis.mac
  )

foreach(_script ${PSIMACE_SCRIPTS})
  configure_file(
    ${PROJECT_SOURCE_DIR}/${_script}
    ${PROJECT_BINARY_DIR}/${_script}
    COPYONLY
    )
endforeach()

# (7)
#install(TARGETS PSIMACE DESTINATION bin)
